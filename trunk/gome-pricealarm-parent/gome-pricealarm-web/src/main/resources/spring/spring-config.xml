<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd 
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd 
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd"
	default-lazy-init="false">

	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
			</list>
		</property>
	</bean>
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
 		<property name="mapperLocations">
 			<value>classpath:mapper/*.xml</value>
 		</property>
	</bean>
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.gome.pricealarm.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
	
	<!-- test quartz2.x -->
	<!-- <bean id="schedulerFactoryBean" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		 <property name="configLocation" value="classpath:quartz.properties" /> 
	</bean> -->
	
	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
	
	<!-- 工作的bean -->
	<bean id="myJob" class="com.gome.pricealarm.service.PriceAlarmQuartzJobBean" />
	
	<!-- job的配置开始 -->
	<bean id="myJobDetail"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject">
			<ref bean="myJob" />
		</property>
		<property name="targetMethod">
			<value>work</value>
		</property>
	</bean>
	<!-- job的配置结束 -->
	
     <!-- 简单触发器bean(设置调度策略),按照定长周期调度石英任务,类似于定时器任务 -->
     <bean id="simpleTriggerBean" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
          <property name="jobDetail" ref="myJobDetail"/>
          <!--首次启动延迟时间（单位：毫秒）  -->
          <property name="startDelay" value="3000"/>
          <!--周期，即每隔多久执行一次（单位：毫秒）  -->
          <property name="repeatInterval" value="300000"/>
          <!--计数，从0开始，设置为9，任务会执行10次然后结束任务  -->
          <!-- 
          <property name="repeatCount" value="9"/>
           -->
     </bean>
     <!-- cron触发器bean,按照时间点调度石英任务
     <bean id="cronTriggerBean" class="org.springframework.scheduling.quartz.CronTriggerBean">
          <property name="jobDetail" ref="myJobDetail"/>
          //cron表达式
          <property name="cronExpression" value="0-9,20-29,40-49 1 17 21 4 ?"/>
     </bean>
      -->
     <!-- 调度工厂bean,启动触发器 -->
     <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
          <property name="triggers">
               <list>
                    <ref bean="simpleTriggerBean"/>
                     <!-- 
                    <ref bean="cronTriggerBean"/>
                    -->
               </list>
          </property>
     </bean>
	
	<context:component-scan base-package="com.gome.pricealarm.service,com.gome.pricealarm.dao,com.gome.pricealarm.sql"/>
	<context:annotation-config />
	<import resource="classpath:spring/spring-config-datasource-dbcp.xml" />
			
</beans>
