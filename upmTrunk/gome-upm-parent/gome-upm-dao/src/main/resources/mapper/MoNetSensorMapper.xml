<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gome.upm.dao.MoNetSensorMapper" >
  <resultMap id="BaseResultMap" type="com.gome.upm.domain.prtg.MoNetSensor" >
    <id column="sensor_id" property="sensorId" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="probe" property="probe" jdbcType="VARCHAR" />
    <result column="group_id" property="groupId" jdbcType="INTEGER" />
    <result column="group_name" property="groupName" jdbcType="VARCHAR" />
    <result column="device_id" property="deviceId" jdbcType="INTEGER" />
    <result column="device_name" property="deviceName" jdbcType="VARCHAR" />
    <result column="sensor_name" property="sensorName" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="status_raw" property="statusRaw" jdbcType="INTEGER" />
    <result column="message" property="message" jdbcType="VARCHAR" />
    <result column="message_raw" property="messageRaw" jdbcType="VARCHAR" />
    <result column="lastvalue" property="lastvalue" jdbcType="VARCHAR" />
    <result column="lastvalue_raw" property="lastvalueRaw" jdbcType="VARCHAR" />
    <result column="priority" property="priority" jdbcType="INTEGER" />
    <result column="favorite" property="favorite" jdbcType="VARCHAR" />
    <result column="favorite_raw" property="favoriteRaw" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="alarm_time" property="alarmTime" jdbcType="TIMESTAMP" />
     <result column="lastvalue_use" jdbcType="DOUBLE" property="lastvalueUse" />
     <result column="alarm_content" property="alarmContent" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    sensor_id sensorId, remark, probe, group_id groupId, group_name groupName, device_id deviceId, device_name deviceName, sensor_name sensorName, 
    status, status_raw statusRaw, message, message_raw messageRaw, lastvalue, lastvalue_raw lastvalueRaw, priority, favorite, 
    favorite_raw favoriteRaw, state, type, alarm_time alarmTime,lastvalue_use lastvalueUse,alarm_content alarmContent,alarm_time alarmTimeStr
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from mo_net_sensor
    where sensor_id = #{sensorId,jdbcType=INTEGER}
  </select>
  
  <delete id="deleteByIds" >
    delete from mo_net_sensor where sensor_id in
    	<foreach collection="list" item="sensorId" index="index"
	         open="(" close=")" separator=",">
	         #{sensorId,jdbcType=INTEGER}
        </foreach>
  </delete>
  
  
   <select id="selectAllIds" resultType="java.lang.Integer" >
     select sensor_id from mo_net_sensor 
   </select>
  
   <select id="selectListStop" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
      from mo_net_sensor where 1=1 and state != 2 and sensor_id in
      <foreach collection="array" item="item" index="index" open="(" separator="," close=")">
      	#{item}
      </foreach>

    </select>
    
    <select id="selectListByMap" resultType="com.gome.upm.domain.prtg.MoNetSensor" parameterType="map">
    select 
    sensor.sensor_id sensorId,
    sensor.device_id deviceId,
    sensor.device_name deviceName,
    device.host,
    sensor.sensor_name sensorName,
    sensor.lastvalue_use lastvalueUse
    from mo_net_sensor sensor,mo_net_device device where 1=1 and sensor.device_id = device.device_id
      <if test="type != null" >
        and sensor.type = #{type,jdbcType=VARCHAR}
      </if>
      <if test="sort == 'top5' " >
        order by sensor.lastvalue_use desc
      </if>
       limit #{offset},#{limit}
    </select>
    
    
    <select id="selectCountByMap" resultType="java.lang.Integer" parameterType="map" >
     select count(1) from mo_net_sensor where 1=1
      <if test="state != null" >
       and state = #{state,jdbcType=INTEGER}
      </if>
	</select>
      
      
  
    <select id="selectList" resultMap="BaseResultMap" parameterType="com.gome.upm.common.Page" >
    select 
    <include refid="Base_Column_List" />
    from mo_net_sensor where 1=1
      <if test="conditions.groupId != null" >
       and group_id =  #{conditions.groupId,jdbcType=INTEGER}
      </if>
      <if test="conditions.deviceId != null" >
       and device_id =  #{conditions.deviceId,jdbcType=INTEGER}
      </if>
      <if test="conditions.state != null and conditions.state == 12 " >
       and (state = 1 or state = 2) 
      </if>
      <if test="conditions.state != null and conditions.state == 0 " >
       and state = 0 
      </if>
      <if test="conditions.state != null and conditions.state == 2 " >
       and state = 2 
      </if>
      <if test="conditions.sdate != null and conditions.sdate != '' ">
      and <![CDATA[ alarm_time >= #{conditions.sdate,jdbcType=TIMESTAMP} ]]>   
      </if>
      <if test="conditions.edate != null and conditions.edate != '' ">
      and <![CDATA[ alarm_time <= #{conditions.edate,jdbcType=TIMESTAMP} ]]>   
      </if>
      order by state desc
    <if test="start != null and pageSize != null">
    	limit #{start},#{pageSize}
    </if>
  </select>
  
    <select id="selectCount" resultType="java.lang.Integer" parameterType="com.gome.upm.common.Page" >
    select count(1) from mo_net_sensor where 1=1
      <if test="conditions.groupId != null" >
       and group_id =  #{conditions.groupId,jdbcType=INTEGER}
      </if>
      <if test="conditions.deviceId != null" >
       and device_id =  #{conditions.deviceId,jdbcType=INTEGER}
      </if>
      <if test="conditions.state != null and conditions.state == 12 " >
       and (state = 1 or state = 2) 
      </if>
      <if test="conditions.state != null and conditions.state == 0 " >
       and state = 0 
      </if>
      <if test="conditions.state != null and conditions.state == 2 " >
       and state = 2 
      </if>
      <if test="conditions.sdate != null and conditions.sdate != '' ">
      and <![CDATA[ alarm_time >= #{conditions.sdate,jdbcType=TIMESTAMP} ]]>   
      </if>
      <if test="conditions.edate != null and conditions.edate != '' ">
      and <![CDATA[ alarm_time <= #{conditions.edate,jdbcType=TIMESTAMP} ]]>   
      </if>
  </select>
  
  
  
   <select id="selectListAlarm" resultType="com.gome.upm.domain.prtg.MoNetSensor" parameterType="com.gome.upm.common.Page" >
    select 
    s.sensor_id sensorId, s.group_name groupName, s.device_id deviceId, s.device_name deviceName, s.sensor_name sensorName,t.alarm_type alarmType, t.alarm_time alarmTimeStr
    from mo_net_sensor s, mo_net_sensor_threshold t where s.sensor_id=t.sensor_id and t.state = 1
      <if test="conditions.groupId != null" >
       and s.group_id =  #{conditions.groupId,jdbcType=INTEGER}
      </if>
      <if test="conditions.deviceId != null" >
       and s.device_id =  #{conditions.deviceId,jdbcType=INTEGER}
      </if>
	<if test="conditions.sdate != null and conditions.sdate != '' ">
      and <![CDATA[ t.alarm_time >= #{conditions.sdate,jdbcType=TIMESTAMP} ]]>   
      </if>
      <if test="conditions.edate != null and conditions.edate != '' ">
      and <![CDATA[ t.alarm_time <= #{conditions.edate,jdbcType=TIMESTAMP} ]]>   
      </if>
      order by t.state desc,t.alarm_time desc
    <if test="start != null and pageSize != null">
    	limit #{start},#{pageSize}
    </if>
  </select>
  
  <select id="selectCountAlarm" resultType="java.lang.Integer" parameterType="com.gome.upm.common.Page" >
    select 
    count(1)
    from mo_net_sensor s, mo_net_sensor_threshold t where s.sensor_id=t.sensor_id and t.state = 1
      <if test="conditions.groupId != null" >
       and s.group_id =  #{conditions.groupId,jdbcType=INTEGER}
      </if>
      <if test="conditions.deviceId != null" >
       and s.device_id =  #{conditions.deviceId,jdbcType=INTEGER}
      </if>
	<if test="conditions.sdate != null and conditions.sdate != '' ">
      and <![CDATA[ t.alarm_time >= #{conditions.sdate,jdbcType=TIMESTAMP} ]]>   
      </if>
      <if test="conditions.edate != null and conditions.edate != '' ">
      and <![CDATA[ t.alarm_time <= #{conditions.edate,jdbcType=TIMESTAMP} ]]>   
      </if>
  </select>
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from mo_net_sensor
    where sensor_id = #{sensorId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.gome.upm.domain.prtg.MoNetSensor" >
    insert into mo_net_sensor (sensor_id, remark, probe, 
      group_id, group_name, device_id, 
      device_name, sensor_name, status, 
      status_raw, message, message_raw, 
      lastvalue, lastvalue_raw, priority, 
      favorite, favorite_raw, state, 
      type, alarm_time,lastvalue_use,alarm_content)
    values (#{sensorId,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, #{probe,jdbcType=VARCHAR}, 
      #{groupId,jdbcType=INTEGER}, #{groupName,jdbcType=VARCHAR}, #{deviceId,jdbcType=INTEGER}, 
      #{deviceName,jdbcType=VARCHAR}, #{sensorName,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, 
      #{statusRaw,jdbcType=INTEGER}, #{message,jdbcType=VARCHAR}, #{messageRaw,jdbcType=VARCHAR}, 
      #{lastvalue,jdbcType=VARCHAR}, #{lastvalueRaw,jdbcType=VARCHAR}, #{priority,jdbcType=INTEGER}, 
      #{favorite,jdbcType=VARCHAR}, #{favoriteRaw,jdbcType=INTEGER}, #{state,jdbcType=INTEGER}, 
      #{type,jdbcType=VARCHAR}, #{alarmTime,jdbcType=TIMESTAMP},#{lastvalueUse,jdbcType=DOUBLE},#{alarmContent,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.gome.upm.domain.prtg.MoNetSensor" >
    insert into mo_net_sensor
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="sensorId != null" >
        sensor_id,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="probe != null" >
        probe,
      </if>
      <if test="groupId != null" >
        group_id,
      </if>
      <if test="groupName != null" >
        group_name,
      </if>
      <if test="deviceId != null" >
        device_id,
      </if>
      <if test="deviceName != null" >
        device_name,
      </if>
      <if test="sensorName != null" >
        sensor_name,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="statusRaw != null" >
        status_raw,
      </if>
      <if test="message != null" >
        message,
      </if>
      <if test="messageRaw != null" >
        message_raw,
      </if>
      <if test="lastvalue != null" >
        lastvalue,
      </if>
      <if test="lastvalueRaw != null" >
        lastvalue_raw,
      </if>
      <if test="priority != null" >
        priority,
      </if>
      <if test="favorite != null" >
        favorite,
      </if>
      <if test="favoriteRaw != null" >
        favorite_raw,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="alarmTime != null" >
        alarm_time,
      </if>
      <if test="lastvalueUse != null" >
        lastvalue_use,
      </if>
      <if test="alarmContent != null" >
        alarm_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="sensorId != null" >
        #{sensorId,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="probe != null" >
        #{probe,jdbcType=VARCHAR},
      </if>
      <if test="groupId != null" >
        #{groupId,jdbcType=INTEGER},
      </if>
      <if test="groupName != null" >
        #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="deviceId != null" >
        #{deviceId,jdbcType=INTEGER},
      </if>
      <if test="deviceName != null" >
        #{deviceName,jdbcType=VARCHAR},
      </if>
      <if test="sensorName != null" >
        #{sensorName,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="statusRaw != null" >
        #{statusRaw,jdbcType=INTEGER},
      </if>
      <if test="message != null" >
        #{message,jdbcType=VARCHAR},
      </if>
      <if test="messageRaw != null" >
        #{messageRaw,jdbcType=VARCHAR},
      </if>
      <if test="lastvalue != null" >
        #{lastvalue,jdbcType=VARCHAR},
      </if>
      <if test="lastvalueRaw != null" >
        #{lastvalueRaw,jdbcType=VARCHAR},
      </if>
      <if test="priority != null" >
        #{priority,jdbcType=INTEGER},
      </if>
      <if test="favorite != null" >
        #{favorite,jdbcType=VARCHAR},
      </if>
      <if test="favoriteRaw != null" >
        #{favoriteRaw,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="alarmTime != null" >
        #{alarmTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastvalueUse != null">
        #{lastvalueUse,jdbcType=DOUBLE},
      </if>
      <if test="alarmContent != null" >
        #{alarmContent,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.gome.upm.domain.prtg.MoNetSensor" >
    update mo_net_sensor
    <set >
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="probe != null" >
        probe = #{probe,jdbcType=VARCHAR},
      </if>
      <if test="groupId != null" >
        group_id = #{groupId,jdbcType=INTEGER},
      </if>
      <if test="groupName != null" >
        group_name = #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="deviceId != null" >
        device_id = #{deviceId,jdbcType=INTEGER},
      </if>
      <if test="deviceName != null" >
        device_name = #{deviceName,jdbcType=VARCHAR},
      </if>
      <if test="sensorName != null" >
        sensor_name = #{sensorName,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="statusRaw != null" >
        status_raw = #{statusRaw,jdbcType=INTEGER},
      </if>
      <if test="message != null" >
        message = #{message,jdbcType=VARCHAR},
      </if>
      <if test="messageRaw != null" >
        message_raw = #{messageRaw,jdbcType=VARCHAR},
      </if>
      <if test="lastvalue != null" >
        lastvalue = #{lastvalue,jdbcType=VARCHAR},
      </if>
      <if test="lastvalueRaw != null" >
        lastvalue_raw = #{lastvalueRaw,jdbcType=VARCHAR},
      </if>
      <if test="priority != null" >
        priority = #{priority,jdbcType=INTEGER},
      </if>
      <if test="favorite != null" >
        favorite = #{favorite,jdbcType=VARCHAR},
      </if>
      <if test="favoriteRaw != null" >
        favorite_raw = #{favoriteRaw,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="alarmTime != null" >
        alarm_time = #{alarmTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastvalueUse != null">
        lastvalue_use = #{lastvalueUse,jdbcType=DOUBLE},
      </if>
      <if test="alarmContent != null" >
        alarm_content = #{alarmContent,jdbcType=VARCHAR},
      </if>
    </set>
    where sensor_id = #{sensorId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gome.upm.domain.prtg.MoNetSensor" >
    update mo_net_sensor
    set remark = #{remark,jdbcType=VARCHAR},
      probe = #{probe,jdbcType=VARCHAR},
      group_id = #{groupId,jdbcType=INTEGER},
      group_name = #{groupName,jdbcType=VARCHAR},
      device_id = #{deviceId,jdbcType=INTEGER},
      device_name = #{deviceName,jdbcType=VARCHAR},
      sensor_name = #{sensorName,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      status_raw = #{statusRaw,jdbcType=INTEGER},
      message = #{message,jdbcType=VARCHAR},
      message_raw = #{messageRaw,jdbcType=VARCHAR},
      lastvalue = #{lastvalue,jdbcType=VARCHAR},
      lastvalue_raw = #{lastvalueRaw,jdbcType=VARCHAR},
      priority = #{priority,jdbcType=INTEGER},
      favorite = #{favorite,jdbcType=VARCHAR},
      favorite_raw = #{favoriteRaw,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR},
      alarm_time = #{alarmTime,jdbcType=TIMESTAMP},
      lastvalue_use = #{lastvalueUse,jdbcType=DOUBLE},
      alarm_content = #{alarmContent,jdbcType=VARCHAR}
    where sensor_id = #{sensorId,jdbcType=INTEGER}
  </update>
</mapper> 